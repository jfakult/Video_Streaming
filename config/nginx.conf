
#user http;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    map $http_upgrade $connection_upgrade{
            default upgrade;
            `` close;
    }
    upstream control_websocket{
        server 127.0.0.1:5001;
        #SERVER endpoint that handle ws:// connections
    }
    upstream video_websocket{
	server 127.0.0.1:5002;
    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        root /usr/share/nginx/html/stream;

	# See backend/server.py
        location /stream {
            proxy_pass http://video_websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location /control {
            # Python websocket handler (backend)
            proxy_pass http://control_websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location / {
            # add_header Cross-Origin-Opener-Policy same-origin always;
            # add_header Cross-Origin-Embedder-Policy require-corp always;
		    root /usr/share/nginx/html/stream/$1;
        }
    }
}
